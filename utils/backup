#! /usr/bin/env python

import os
import errno
import argparse

from subprocess import Popen, PIPE
from datetime import date

bucketName = 'ajay-test-bucket01'

def get_current_date():
    return date.today().isoformat()

def backup(localDir):
    backupDate = get_current_date()
    s3dir = "s3://%s/%s/" % (bucketName, backupDate)
    print "Backing Up %s to %s" % (localDir, s3Dir)
    print "Command: %s" % cmd
    cmd = "s3cmd sync %s %s" % (localDir, s3Dir)
    if run_cmd(cmd):
        print "Backup Successful!"
    else:
        print "Backup Failed!"

def restore(localDir, restoreDate):
    parentDirLocal = '/'.join(localDir.split('/')[:-1])
    directory = localDir.split('/')
    s3Dir = "s3://%s/%s/%s" % (bucketName, restoreDate, directory)
    print "Restoring %s to %s/%s from date %s" % (s3Dir, parentDirLocal, \
            directory, restoreDate)
    print "Command: %s" % cmd
    cmd = "s3cmd sync %s %s" % (s3Dir, parentDirLocal)
    if run_cmd(cmd):
        print 'Restore Success!'
    else:
        print 'Restore Fail!'

def run_cmd(cmd):
    p = Popen(cmd, shell=True, stdout=PIPE, stderr=PIPE)
    out, err = p.communicate()
    if err:
        print err
        return False
    else:
        print out
        return True

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--directory', help='directory to be backed up \
            or restored to. Absolute path.')
    parser.add_argument('-b', '--backup', action='store_true')
    parser.add_argument('-r', '--restore', action='store_true')
    parser.add_argument('-t', '--date', help='date from which to restore.')
    args = parser.parse_args()

    if not args.directory:
        print "Missing parameters. Set <-d/--directory>. Eh?"
    else:
        if args.backup and args.restore:
            print "Too many flags set. Select one of (-b/--backup, -r/--restore)"
        elif not args.backup and not args.restore:
            print "Missing flag. Select one of (-b/--backup, -r/--restore)"
        else:
            localDir = args.directory
            if args.backup:
                backup(localDir)
            elif args.restore:
                if not args.date:
                    print "Missing paramater. Set <-t/--date>. Backup date."
                else:
                    restoreDate = args.date
                    restore(localDir, restoreDate)

if __name__ == '__main__':
    main()
